apiVersion: apps/v1
kind: Deployment
metadata:
  name: pomodolist-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pomodolist-backend-app
  template:
    metadata:
      labels:
        app: pomodolist-backend-app
    spec:
      serviceAccountName: pomodolist-ksa
      containers:
      - name: pomodolist-be
        image: us-central1-docker.pkg.dev/pomodolist-362812/pomodolist/pomodolist-backend-image:tag1
        ports:
        - containerPort: 8001
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: pomodolist-be-secrets
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: pomodolist-be-secrets
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: pomodolist-be-secrets
              key: database
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.32.0
        command:
          - "/cloud_sql_proxy"
          - "-log_debug_stdout"
          - "-instances=spomodolist-362812:us-central1:pomodolist-sql=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        # You should use resource requests/limits as a best practice to prevent
        # pods from consuming too many resources and affecting the execution of
        # other pods. You should adjust the following values based on what your
        # application needs. For details, see
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        # resources:
        #   requests:
        #     # The proxy's memory use scales linearly with the number of active
        #     # connections. Fewer open connections will use less memory. Adjust
        #     # this value based on your application's requirements.
        #     memory: "2Gi"
        #     # The proxy's CPU use scales linearly with the amount of IO between
        #     # the database and the application. Adjust this value based on your
        #     # application's requirements.
        #     cpu:    "1"